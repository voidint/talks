Go语言单元测试典型案例

voidint

* 什么是单元测试
- 在计算机编程中，单元测试（英语：Unit Testing）又称为模块测试，是针对程序模块（软件设计的最小单位）来进行正确性检验的测试工作。程序单元是应用的最小可测试部件。
- 在过程化编程中，一个单元就是单个程序、函数、过程等。
- 对于面向对象编程，最小单元就是方法，包括基类（超类）、抽象类、或者派生类（子类）中的方法。


* 单元测试好处
- 对重构友好（单元测试是业务逻辑的边界）
- 快速检测功能实现与功能设计是否匹配
- 单元测试是对代码实现的自省
- 避免人为疏忽对功能实现的破坏
- 单元测试是粒度最细的测试（可以覆盖其他测试方法无法覆盖的所有逻辑分支）
- ...


* 建议
- 单元测试文件与源代码放置在同一个目录下，以`xxxx_test.go`命名。
- 单元测试函数名为`TestXXXXX`，若方法/函数非导出，则建议以`Test_xxxx`命名。
- 测试材料放置在单元测试源代码文件同级目录的`testdata`目录下
- 测试函数/方法时分清主次
- 表格驱动测试（Table driven testing）
- 行为驱动开发（Behavior-driven development）
- 测试驱动开发（Test-driven development）



* 案例一：测试异构平台下的命令执行相关的函数/方法
.code code_kernel.txt

* 案例二：测试数据库操作相关的函数/方法

* 案例三：测试HTTP服务端相关的函数/方法
.code code_http_server.txt


* 案例四：测试HTTP客户端相关的函数/方法



 
